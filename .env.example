# copy the below details to .env file and update the values as per your requirements
# This file is used to configure the SnapLogic Robot Framework examples project.
# NOTE: In .env file remove inline comments

# Configuration for the SnapLogic ML migration project
URL=https://example.com/
ORG_ADMIN_USER=your_username
ORG_ADMIN_PASSWORD=your_password
ORG_NAME=org_name   # Eg: ml-legacy-migration

#### EVERYTHING BELOW THIS POINT WILL BE CREATED AS PART OF THE AUTOMATED SCRIPTS ####
PROJECT_SPACE=project_space # Eg: sl-automation-ps
PROJECT_NAME=project_name # Eg: sl_project

# Configuration for the SnapLogic Groundplex
GROUNDPLEX_NAME=groundplex_name #Eg: sl-groundplex-automation
GROUNDPLEX_ENV=groundplex_environment_name #Eg: slgroundplexautomationdev
GROUNDPLEX_LOCATION_PATH=your_groundplex_location_path # this is location where groundplex will be created Eg: project_space/project_name/shared
RELEASE_BUILD_VERSION=build_version  # this is the build version of the groundplex you want to create Eg: main-30027

# Configuration for Accounts
ACCOUNT_LOCATION_PATH="account_path where you want to create the account" # this is location where all accounts will be created Eg: project_space/project_name/shared

# All the instances related to the below accounts will be created as parts of make sanplogic-start-services command
# Included the details of account fields (As Example)  based on the info given in docker-compose files.
# User can update the values in composw files as per their requirements.

ORACLE_ACCOUNT_NAME=oracle_account_name # Eg: oracle_acct 
ORACLE_HOST=oracle_oracle-hostname # Eg: oracle-db
ORACLE_DBNAME=dbname # Eg: FREEPDB1
ORACLE_USER=oracle_username # Eg: SYSTEM
ORACLE_DBPASS=oracle_password  # Eg: Oracle123

POSTGRES_ACCOUNT_NAME=postgres_account_name # Eg: postgres_acc 
POSTGRES_HOST=postgres_host      # Eg: postgres-db
POSTGRES_DATABASE=POSTGRES_DATABASE # Eg: snaplogic
POSTGRES_PORT=POSTGRES_PORT # Eg: 5432
POSTGRES_USER=postgres_username  # Eg: snaplogic
POSTGRES_PASSWORD=postgres_password  # Eg: snaplogic

S3_ACCOUNT_NAME=s3_account_name # Eg: s3_account 
S3_ENDPOINT=s3_endpoint # Eg: http://minio:9000 (internal) or http://localhost:9010 (external)
S3_ACCESS_KEY=s3_access_key     # Eg: minioadmin
S3_SECRET_KEY=s3_secret_key    # Eg: minioadmin
S3_ENDPOINT=http://minio:9000   # Internal Docker network uses port 9000, external access uses 9010

# JMS/ActiveMQ Account-specific environment variables
JMS_ACCOUNT_NAME=jms_account_name # Eg: jms_acct : This name should match the account name in .slp file
JMS_HOST=jms_hostname # Eg: activemq
JMS_PORT=jms_port # Eg: 61616 (for OpenWire) or 61613 (for STOMP)
JMS_USERNAME=jms_username # Eg: admin
JMS_PASSWORD=jms_password # Eg: admin
JMS_CONNECTION_FACTORY=ConnectionFactory # Eg: ConnectionFactory
JMS_JAR=artemis-jms-client-all-2.6.0.jar
JMS_INITIAL_NAMING_FACTORY_PROPERTY_NAME=java.naming.factory.initial
JMS_INITIAL_NAMING_FACTORY_PROPERTY_VALUE=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
JMS_CONNECTION_FACTORY_PROPERTY_NAME=connectionFactory.ConnectionFactory
JMS_CONNECTION_FACTORY_PROPERTY_VALUE=tcp://activemq:61616
# Add the below Under JNDI Properties
# #########################################
# property Name       Property Value
#######################################
# java.naming.factory.initial  org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
# connectionFactory.ConnectionFactory  tcp://activemq:61616
# #############################################
# Add the below Jar file also to the account    
# JMS_JAR_FILE=artemis-jms-client-all-2.6.0.jar


SQLSERVER_ACCOUNT_NAME=sqlserver_account_name # Eg: sqlserver_acct 
SQLSERVER_HOST=sqlserver_hostname # Eg: sqlserver-db
SQLSERVER_DATABASE=SQLSERVER_DATABASE # Eg: TEST
SQLSERVER_PORT=SQLSERVER_PORT # Eg: 1433
SQLSERVER_USER=sqlserver_username # Eg: sa
SQLSERVER_PASSWORD=sqlserver_password # Eg: Snaplogic123!

MYSQL_ACCOUNT_NAME=mysql_account_name # Eg: mysql_acct
MYSQL_HOST=mysql_hostname # Eg: mysql-db
MYSQL_DATABASE=MYSQL_DATABASE # Eg: TEST
MYSQL_PORT=MYSQL_PORT # Eg: 3306
MYSQL_USER=mysql_username # Eg: testuser
MYSQL_PASSWORD=mysql_password # Eg: snaplogic
MYSQL_JAR=mysql-connector-j-9.3.0.jar # Eg: mysql-connector-j-9.3.0.jar

TERADATA_ACCOUNT_NAME=teradata_account_name # Eg: teradata_acct
TERADATA_HOST=teradata_hostname # Eg: teradata-db
TERADATA_DBNAME=teradata_dbname # Eg: TEST
TERADATA_PORT=TERADATA_PORT # Eg: 1025
TERADATA_USER=teradata_username # Eg: testuser
TERADATA_PASSWORD=teradata_password # Eg: snaplogic

DB2_ACCOUNT_NAME=db2_account_name # Eg: db2_acct
DB2_HOST=db2_hostname # Eg: db2-db
DB2_DATABASE=DB2_DATABASE # Eg: TESTDB
DB2_PORT=DB2_PORT # Eg: 50000
DB2_USER=db2_username # Eg: db2inst1
DB2_PASSWORD=db2_password # Eg: snaplogic
DB2_JDBC_JAR=../shared/db2jcc4.jar # Eg: db2jcc4.jar
DB2_JDBC_DRIVER_CLASS=db2_jdbc_driver_class # Eg: com.ibm.db2.jcc.DB2Driver
DB2_JDBC_URL=db2_jdbc_url # Eg: jdbc:db2://host.docker.internal:50000/TESTDB
DB2_TEST_QUERY=db2_test_query # Eg: SELECT 1 FROM SYSIBM.SYSDUMMY1

SALESFORCE_ACCOUNT_NAME=salesforce_account_name # Eg: sfdc_acct
SALESFORCE_USERNAME=salesforce_username # Eg: test or snap-qa@snaplogic.com
SALESFORCE_PASSWORD=salesforce_password # Eg: any_test_password
SALESFORCE_SECURITY_TOKEN=salesforce_security_token # Eg: leave_blank_for_mock
SALESFORCE_LOGIN_URL=salesforce_login_url # Eg: http://salesforce-api-mock:8080 
SALESFORCE_SANDBOX=true # Set to true for sandbox/mock environments
SALESFORCE_API_VERSION=salesforce_api_version # Eg: 59.0

KAFKA_ACCOUNT_NAME=kafka_account_name # Eg: kafka_acct or kafka_acct
KAKFA_BOOTSTRAP_SERVER=kafka_bootstrap_server # Eg: kafka:29092
KAKFA_ADVANCED_PROPERTY_KEY=kafka_advanced_property_key # Eg: security.protocol
KAKFA_ADVANCED_PROPERTY_VALUE=kafka_advanced_property_value # Eg: PLAINTEXT
KAKFA_SCHEMA_REGISTRY_URL=kafka_schema_registry_url # you can Leave it empty

# Snowflake Account Configuration
SNOWFLAKE_ACCOUNT_NAME=snowflake_account_name # Eg: Snowflake_acct
SNOWFLAKE_HOSTNAME=snowflake_hostname # Eg: snaplogic.snowflakecomputing.com
SNOWFLAKE_PORT=snowflake_port # Eg: 443
SNOWFLAKE_DATABASE=snowflake_database # Eg: FDLDB
SNOWFLAKE_WAREHOUSE=snowflake_warehouse # Eg: ELT_XS_WH
SNOWFLAKE_USERNAME=snowflake_username # Eg: test_user
SNOWFLAKE_PASSWORD=snowflake_password # Eg: test_password
SNOWFLAKE_S3_BUCKET=snowflake_s3_bucket # Eg: add something or leave empty
SNOWFLAKE_S3_FOLDER=snowflake_s3_folder # Eg: add something or leave empty
SNOWFLAKE_S3_ACCESS_KEY=snowflake_s3_access_key # add something or leave empty
SNOWFLAKE_S3_SECRET_KEY=snowflake_s3_secret_key # add something or leave empty

# Email/SMTP Account Configuration (MailDev Mock Service)
# These settings match the SnapLogic Email Account configuration fields
# MailDev captures all emails sent through it without actually delivering them
EMAIL_ACCOUNT_NAME=email_account_label # Eg: Email-Acct (Label field in SnapLogic)
EMAIL_ID=email_id # Eg: test@example.com (Email ID field - any email works for MailDev)
EMAIL_PASSWORD=email_password # Eg: leave_empty or any_value (Password field - MailDev doesn't validate)
EMAIL_SERVER_DOMAIN=email_server_domain # Eg: maildev-test (from Groundplex/Docker) or localhost (from host)
EMAIL_PORT=email_port # Eg: 1025 (Port field - MailDev SMTP port)
EMAIL_SECURE_CONNECTION=email_secure_connection # Eg: NONE (Secure connection field - MailDev doesn't use SSL/TLS)
EMAIL_ATTACHMENT_PASSWORD=email_attachment_password # Eg: leave_empty (Attachment password field - optional)

# ============================================================================
# PORT CONFIGURATION
# ============================================================================
# These ports can be overridden by setting environment variables
# If you're running multiple instances, change these to avoid conflicts
# Format: HOST_PORT:CONTAINER_PORT (we're configuring the HOST_PORT here)

# Groundplex Ports
# The ports exposed by the Groundplex container for API and JCC services
GROUNDPLEX_API_PORT=8090  # Groundplex API port (maps to container port 8090)
GROUNDPLEX_JCC_PORT=8081   # Groundplex JCC port (maps to container port 8081)

# Database Ports
# Default ports for various database services
POSTGRES_PORT=5432    # PostgreSQL database (maps to container port 5432)
MYSQL_PORT=3306       # MySQL database (maps to container port 3306)
ORACLE_PORT=1521      # Oracle database (maps to container port 1521)
SQLSERVER_PORT=1433   # SQL Server database (maps to container port 1433)
DB2_PORT=50000        # DB2 database (maps to container port 50000)
TERADATA_PORT=1025    # Teradata database (maps to container port 1025)

# Email Mock Service Ports (MailDev)
# MailDev provides both SMTP server and Web UI
MAILDEV_SMTP_PORT=1025  # SMTP server for capturing emails (maps to container port 1025)
MAILDEV_WEB_PORT=1080   # Web UI to view captured emails (maps to container port 1080)

# S3/MinIO Ports
# MinIO provides S3-compatible object storage
MINIO_API_PORT=9010      # MinIO API endpoint (maps to container port 9000)
MINIO_CONSOLE_PORT=9011  # MinIO web console (maps to container port 9001)

# Salesforce Mock Service Ports
# WireMock and JSON Server for Salesforce API simulation
SALESFORCE_HTTP_PORT=8089   # WireMock HTTP port (maps to container port 8080)
SALESFORCE_HTTPS_PORT=8443  # WireMock HTTPS port (maps to container port 8443)
SALESFORCE_JSON_PORT=8082   # JSON Server for persistent data (maps to container port 3000)

# ActiveMQ Message Broker Ports
# ActiveMQ provides multiple protocol endpoints
ACTIVEMQ_WEB_PORT=8161    # ActiveMQ web console (maps to container port 8161)
ACTIVEMQ_JMS_PORT=61616   # JMS/OpenWire protocol (maps to container port 61616)
ACTIVEMQ_STOMP_PORT=61613 # STOMP protocol (maps to container port 61613)
ACTIVEMQ_AMQP_PORT=5672   # AMQP protocol (maps to container port 5672)

# Kafka Ports
# Apache Kafka message broker and related services
KAFKA_PORT=9092              # Kafka broker port (maps to container port 9092)
ZOOKEEPER_PORT=2181          # Zookeeper port for Kafka coordination (maps to container port 2181)
KAFKA_JMX_PORT=9101          # JMX port for Kafka monitoring (maps to container port 9101)
KAFKA_UI_PORT=8080           # Kafka UI web console port (maps to container port 8080)
KAFKA_SCHEMA_REGISTRY_PORT=8081  # Schema Registry port (maps to container port 8081)




