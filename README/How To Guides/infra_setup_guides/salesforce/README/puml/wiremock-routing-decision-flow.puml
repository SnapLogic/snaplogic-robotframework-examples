@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

skinparam groupInheritance 1
skinparam rectangle {
    BackgroundColor #FEFEFE
    BorderColor #A0A0A0
    BorderThickness 2
    RoundCorner 10
}

title WireMock Request Routing - Stateless vs Stateful Decision Flow

actor test_suite as "Test Suite"

component groundplex as "Groundplex\nJCC" {
    component pipeline as "SnapLogic Pipeline"
}

component wiremock_router as "WireMock Router" {
    
    rectangle request_matcher as "Request Matcher" {
        component pattern_matching as "Pattern\nMatching Engine"
        component priority_resolver as "Priority\nResolver"
    }
    
    rectangle mapping_selector as "Mapping Selector" {
        database regular_mappings as "Regular Mappings\n(Stateless)" {
            note right : Static JSON responses\nNo data persistence\nFast response times
        }
        
        database proxy_mappings as "Proxy Mappings\n(Stateful)" {
            note right : Forwards to JSON-DB\nData persistence\nDynamic operations
        }
    }
    
    rectangle response_handler as "Response Handler" {
        component static_responder as "Static\nResponder"
        component proxy_forwarder as "Proxy\nForwarder"
        component response_transformer as "Response\nTransformer"
    }
}

component json_db_layer as "JSON Database Layer" {
    component json_server as "JSON Server"
    database persistent_storage as "Persistent\nStorage"
    
    json_server <--> persistent_storage
}

' Main flow
test_suite --> pipeline : executes
pipeline --> pattern_matching : HTTP request

pattern_matching --> priority_resolver : matched patterns
priority_resolver --> regular_mappings : check first
priority_resolver --> proxy_mappings : check if proxy enabled

regular_mappings --> static_responder : use static response
proxy_mappings --> proxy_forwarder : forward request

static_responder --> response_transformer : format response
proxy_forwarder --> json_server : CRUD operation
json_server --> response_transformer : dynamic response

response_transformer --> pipeline : final response
pipeline --> test_suite : test result

' Decision annotations
note top of pattern_matching
  **Matching Criteria:**
  • HTTP Method (GET, POST, etc.)
  • URL Pattern (exact or regex)
  • Headers (if specified)
  • Query Parameters
  • Request Body
end note

note bottom of regular_mappings
  **Use Cases:**
  • OAuth authentication
  • API metadata endpoints
  • Error scenarios
  • Quick smoke tests
end note

note bottom of proxy_mappings
  **Use Cases:**
  • CRUD operations
  • Workflow testing
  • Data relationships
  • Integration tests
end note

' Decision flow legend
legend right
  |= Flow Type |= Description |= Example |
  | <color:blue>Stateless</color> | Returns predefined response | OAuth token |
  | <color:green>Stateful</color> | Persists data changes | Create Account |
  | <color:red>Priority</color> | Higher priority wins | Specific vs Generic |
endlegend

footer SnapLogic Confidential

@enduml