# =============================================================================
# ☁️ MinIO S3-Compatible Storage Emulator
# =============================================================================
# This file contains targets for MinIO S3-compatible storage mock service
# =============================================================================

.PHONY: start-s3-emulator stop-s3-emulator run-s3-demo s3-status s3-restart s3-clean

# Include common configuration
include makefiles/common_services/Makefile.common

# =============================================================================
# MinIO S3 Service Management
# =============================================================================

# 🚀 Start MinIO S3 emulator
start-s3-emulator:
	@echo "🚀 Starting MinIO S3 emulator..."
	$(DOCKER_COMPOSE) --profile minio-dev up -d minio
	@echo "⏳ Waiting for MinIO to initialize..."
	@sleep 5
	@echo "✅ MinIO S3 emulator started!"
	@echo ""
	@echo "🌐 Service endpoints:"
	@echo "   • API Endpoint: http://localhost:9010"
	@echo "   • Console UI: http://localhost:9011"
	@echo "   • Access Key: minioadmin"
	@echo "   • Secret Key: minioadmin"
	@echo ""
	@echo "🔧 SnapLogic S3 Snap configuration:"
	@echo "   • Endpoint URL: http://localhost:9010"
	@echo "   • Access Key ID: minioadmin"
	@echo "   • Secret Access Key: minioadmin"
	@echo "   • Region: us-east-1"
	@echo "   • Path Style Access: true"

# ⛔ Stop MinIO S3 emulator
stop-s3-emulator:
	@echo "⛔ Stopping MinIO S3 emulator..."
	$(DOCKER_COMPOSE) stop minio
	@echo "🗑️ Removing MinIO container..."
	$(DOCKER_COMPOSE) rm -f minio 2>/dev/null || true
	@echo "✅ MinIO S3 emulator stopped."

# 🔄 Restart MinIO S3 emulator
s3-restart:
	@echo "🔄 Restarting MinIO S3 emulator..."
	@$(MAKE) stop-s3-emulator
	@sleep 2
	@$(MAKE) start-s3-emulator
	@echo "✅ MinIO S3 emulator restarted successfully!"

# 🔍 Check MinIO S3 emulator status
s3-status:
	@echo "🔍 Checking MinIO S3 emulator status..."
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@container_status=$$(docker inspect -f '{{.State.Status}}' minio-s3-emulator 2>/dev/null || echo "not found"); \
	if [ "$$container_status" = "running" ]; then \
		echo "✅ MinIO container is running"; \
		echo "   Container: minio-s3-emulator"; \
		echo "   API Port: 9010"; \
		echo "   Console Port: 9011"; \
		echo ""; \
		echo "🧪 Testing service health..."; \
		if curl -s -f http://localhost:9010/minio/health/live >/dev/null 2>&1; then \
			echo "   ✅ MinIO API is healthy"; \
		else \
			echo "   ⚠️  MinIO API not responding"; \
		fi; \
		if curl -s -f http://localhost:9011/ >/dev/null 2>&1; then \
			echo "   ✅ MinIO Console is accessible"; \
		else \
			echo "   ⚠️  MinIO Console not responding"; \
		fi; \
		echo ""; \
		echo "📊 Container resource usage:"; \
		docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" minio-s3-emulator 2>/dev/null || true; \
	else \
		echo "❌ MinIO container is not running (status: $$container_status)"; \
		echo "💡 Run 'make start-s3-emulator' to start MinIO"; \
	fi

# 🧹 Clean MinIO data and volumes
s3-clean:
	@echo "🧹 Cleaning MinIO data and volumes..."
	@$(MAKE) stop-s3-emulator
	@echo "🗑️ Removing MinIO volumes..."
	@docker volume rm $$(docker volume ls -q | grep minio) 2>/dev/null || true
	@echo "✅ MinIO cleaned. All data removed."

# 🧪 Run S3 demo script
run-s3-demo:
	@echo "🧪 Running MinIO S3 demo script..."
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@if [ ! -f "test/suite/test_data/python_helper_files/minio_demo.py" ]; then \
		echo "❌ Demo script not found: test/suite/test_data/python_helper_files/minio_demo.py"; \
		echo "💡 Creating a sample demo script..."; \
		echo "   Please implement your S3 operations in the demo script."; \
		exit 1; \
	fi
	@echo "📦 Creating demo bucket and uploading test data..."
	python3 test/suite/test_data/python_helper_files/minio_demo.py \
		--endpoint http://localhost:9010 \
		--access-key minioadmin \
		--secret-key minioadmin \
		--bucket demo-bucket2
	@echo "✅ S3 demo completed successfully!"
	@echo ""
	@echo "🌐 View your data in MinIO Console:"
	@echo "   http://localhost:9011"
	@echo "   Login: minioadmin / minioadmin"
