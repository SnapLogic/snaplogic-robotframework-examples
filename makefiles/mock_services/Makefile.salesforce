# =============================================================================
# 🔌 Salesforce Mock API Server Management
# =============================================================================
# This file contains targets for Salesforce mock API services including
# WireMock for API mocking and JSON Server for persistent CRUD operations
# =============================================================================

.PHONY: salesforce-mock-start salesforce-mock-stop salesforce-mock-status \
        salesforce-mock-restart salesforce-mock-clean start-jsonserver stop-jsonserver \
        salesforce-test salesforce-mock-logs

# Include common configuration
include makefiles/common_services/Makefile.common

# =============================================================================
# Salesforce Mock Service Management
# =============================================================================

# 🚀 Start Salesforce Mock server with all components
salesforce-mock-start:
	@echo "🚀 Starting Salesforce Mock API server..."
	$(DOCKER_COMPOSE) --profile salesforce-dev up -d salesforce-mock salesforce-json-server
	@echo "⏳ Waiting for services to initialize..."
	@sleep 5
	@echo "✅ Salesforce mock services started!"
	@echo ""
	@echo "🌐 Available endpoints:"
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@echo "📡 WireMock API Mock:"
	@echo "   • Base URL: http://localhost:8089 (will show 403 - this is normal!)"
	@echo "   • OAuth Token: POST http://localhost:8089/services/oauth2/token"
	@echo "   • Query API: GET http://localhost:8089/services/data/v59.0/query"
	@echo "   • CRUD Operations: http://localhost:8089/services/data/v59.0/sobjects/Account"
	@echo "   • Admin Console: http://localhost:8089/__admin/"
	@echo "   • View Mappings: http://localhost:8089/__admin/mappings"
	@echo ""
	@echo "💾 JSON Server (Persistent Storage):"
	@echo "   • Base URL: http://localhost:8082"
	@echo "   • Accounts: http://localhost:8082/accounts"
	@echo "   • Contacts: http://localhost:8082/contacts"
	@echo "   • Opportunities: http://localhost:8082/opportunities"
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@echo ""
	@echo "🔧 Configure SnapLogic Salesforce Account:"
	@echo "   • Login URL: http://localhost:8089"
	@echo "   • Username: snap-qa@snaplogic.com (or any value)"
	@echo "   • Password: any value"
	@echo ""
	@echo "🧪 Test the service:"
	@echo "   curl -X POST http://localhost:8089/services/oauth2/token -d 'grant_type=password'"

# 🚀 Start only JSON Server for persistent CRUD operations
start-jsonserver:
	@echo "🚀 Starting Salesforce JSON Server..."
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	docker compose -f docker/docker-compose.salesforce-mock.yml up -d salesforce-json-server
	@echo "⏳ Waiting for JSON Server to initialize..."
	@sleep 3
	@echo "✅ JSON Server started!"
	@echo ""
	@echo "🌐 Available endpoints:"
	@echo "   • From host machine: http://localhost:8082"
	@echo "   • From Docker containers: http://salesforce-json-mock"
	@echo "   • Database file: ./docker/scripts/salesforce/json-db/salesforce-db.json"
	@echo ""
	@echo "🧪 Test from your host machine:"
	@echo "   curl http://localhost:8082/accounts"
	@echo "   curl http://localhost:8082/contacts"
	@echo "   curl http://localhost:8082/opportunities"
	@echo ""
	@echo "🐳 Test from Docker container (e.g., Groundplex):"
	@echo "   docker exec snaplogic-groundplex curl http://salesforce-json-mock/accounts"
	@echo ""
	@echo "🔧 SnapLogic REST Snap configuration:"
	@echo "   Service URL: http://salesforce-json-mock"
	@echo "   Resource Path: /accounts"

# ⛔ Stop all Salesforce Mock services
salesforce-mock-stop:
	@echo "⛔ Stopping Salesforce Mock server containers..."
	$(DOCKER_COMPOSE) stop salesforce-mock salesforce-json-server || true
	@echo "🗑️ Removing Salesforce mock containers and volumes..."
	$(DOCKER_COMPOSE) rm -f -v salesforce-mock salesforce-json-server || true
	@echo "🧹 Cleaning up Salesforce mock volumes..."
	docker volume rm $$(docker volume ls -q | grep salesforce) 2>/dev/null || true
	@echo "✅ Salesforce mock stopped and cleaned up."

# ⛔ Stop only JSON Server
stop-jsonserver:
	@echo "⛔ Stopping Salesforce JSON Server..."
	docker compose -f docker/docker-compose.salesforce-mock.yml stop salesforce-json-server || true
	@echo "🗑️ Removing JSON Server container..."
	docker compose -f docker/docker-compose.salesforce-mock.yml rm -f salesforce-json-server || true
	@echo "✅ JSON Server stopped and cleaned up."

# 🔄 Restart Salesforce Mock services
salesforce-mock-restart:
	@echo "🔄 Restarting Salesforce Mock server..."
	@$(MAKE) salesforce-mock-stop
	@sleep 2
	@$(MAKE) salesforce-mock-start

# 🔍 Check Salesforce Mock services status
salesforce-mock-status:
	@bash -c '\
		echo "🔍 Checking Salesforce Mock status..."; \
		echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"; \
		wiremock_status=$$(docker inspect -f "{{.State.Status}}" salesforce-api-mock 2>/dev/null || echo "not found"); \
		json_server_status=$$(docker inspect -f "{{.State.Status}}" salesforce-json-mock 2>/dev/null || echo "not found"); \
		if [ "$$wiremock_status" = "running" ]; then \
			echo "✅ WireMock container is running"; \
			echo "   Container: salesforce-api-mock"; \
			echo "   Port: 8089"; \
		else \
			echo "❌ WireMock container is not running (status: $$wiremock_status)"; \
		fi; \
		if [ "$$json_server_status" = "running" ]; then \
			echo "✅ JSON Server container is running"; \
			echo "   Container: salesforce-json-mock"; \
			echo "   Port: 8082"; \
		else \
			echo "❌ JSON Server container is not running (status: $$json_server_status)"; \
		fi; \
		echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"; \
		if [ "$$wiremock_status" = "running" ] && [ "$$json_server_status" = "running" ]; then \
			echo "🌐 Available endpoints:"; \
			echo "   • Base URL: http://localhost:8089"; \
			echo "   • Admin Console: http://localhost:8089/__admin/"; \
			echo "   • Request Journal: http://localhost:8089/__admin/requests"; \
			echo "   • JSON Server: http://localhost:8082"; \
			echo ""; \
			echo "🧪 Testing service health..."; \
			if curl -s -f http://localhost:8089/__admin/health >/dev/null 2>&1; then \
				echo "   ✅ WireMock health check passed"; \
			else \
				echo "   ⚠️  WireMock health check failed"; \
			fi; \
			if curl -s -f -X POST http://localhost:8089/services/oauth2/token -d "grant_type=password" >/dev/null 2>&1; then \
				echo "   ✅ OAuth endpoint is accessible"; \
			else \
				echo "   ⚠️  OAuth endpoint not responding"; \
			fi; \
			if curl -s -f http://localhost:8082/ >/dev/null 2>&1; then \
				echo "   ✅ JSON Server is accessible"; \
			else \
				echo "   ⚠️  JSON Server not responding"; \
			fi; \
		elif [ "$$wiremock_status" = "running" ] || [ "$$json_server_status" = "running" ]; then \
			echo "⚠️  WARNING: Only partial services are running"; \
			echo "💡 Run '\''make salesforce-mock-restart'\'' to restart all services"; \
		else \
			echo "💡 Run '\''make salesforce-mock-start'\'' to start the mock services"; \
		fi'

# 🧹 Clean Salesforce mock data and restart
salesforce-mock-clean:
	@echo "🧹 Cleaning Salesforce mock data..."
	@$(MAKE) salesforce-mock-stop
	@echo "🗑️ Removing all Salesforce mock volumes and data..."
	@docker volume rm $$(docker volume ls -q | grep salesforce) 2>/dev/null || true
	@rm -rf ./docker/scripts/salesforce/json-db/*.json 2>/dev/null || true
	@echo "✅ Salesforce mock data cleaned!"

# 🧪 Test Salesforce mock endpoints
salesforce-test:
	@echo "🧪 Testing Salesforce mock endpoints..."
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@echo "1️⃣ Testing OAuth endpoint..."
	@curl -s -X POST http://localhost:8089/services/oauth2/token \
		-d "grant_type=password&username=test@test.com&password=test" \
		| python3 -m json.tool 2>/dev/null || echo "   ⚠️  OAuth endpoint not responding"
	@echo ""
	@echo "2️⃣ Testing JSON Server accounts endpoint..."
	@curl -s http://localhost:8082/accounts | python3 -m json.tool 2>/dev/null || echo "   ⚠️  JSON Server not responding"
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@echo "✅ Salesforce mock tests completed!"

# 📋 View Salesforce mock logs
salesforce-mock-logs:
	@echo "📋 Salesforce Mock Service Logs"
	@echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
	@echo "📡 WireMock Logs:"
	@docker logs salesforce-api-mock --tail=20 2>/dev/null || echo "   No WireMock logs available"
	@echo ""
	@echo "💾 JSON Server Logs:"
	@docker logs salesforce-json-mock --tail=20 2>/dev/null || echo "   No JSON Server logs available"
