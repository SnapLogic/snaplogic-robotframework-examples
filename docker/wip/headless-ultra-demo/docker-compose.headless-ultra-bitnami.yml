version: '3.8'

services:
  # All services using Bitnami Kafka image for consistency
  
  # Simulated SnapLogic Ultra Task Instance 1 (Node 1)
  snaplex-instance-1:
    image: bitnami/kafka:3.7
    container_name: snaplex-ultra-instance-1
    hostname: snaplex-instance-1
    environment:
      KAFKA_BROKER: kafka:29092
      CONSUMER_GROUP: snaplogic-group-a
      INSTANCE_ID: instance-1
      NODE_ID: node-1
      # Bitnami specific env vars (optional)
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    volumes:
      - ./consumer-script-bitnami.sh:/scripts/consumer.sh:ro
    command: ["/bin/bash", "/scripts/consumer.sh"]
    networks:
      - snaplogicnet
    depends_on:
      - kafka-setup-headless

  # Simulated SnapLogic Ultra Task Instance 2 (Node 1)
  snaplex-instance-2:
    image: bitnami/kafka:3.7
    container_name: snaplex-ultra-instance-2
    hostname: snaplex-instance-2
    environment:
      KAFKA_BROKER: kafka:29092
      CONSUMER_GROUP: snaplogic-group-a
      INSTANCE_ID: instance-2
      NODE_ID: node-1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    volumes:
      - ./consumer-script-bitnami.sh:/scripts/consumer.sh:ro
    command: ["/bin/bash", "/scripts/consumer.sh"]
    networks:
      - snaplogicnet
    depends_on:
      - kafka-setup-headless

  # Simulated SnapLogic Ultra Task Instance 3 (Node 2)
  snaplex-instance-3:
    image: bitnami/kafka:3.7
    container_name: snaplex-ultra-instance-3
    hostname: snaplex-instance-3
    environment:
      KAFKA_BROKER: kafka:29092
      CONSUMER_GROUP: snaplogic-group-b
      INSTANCE_ID: instance-3
      NODE_ID: node-2
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    volumes:
      - ./consumer-script-bitnami.sh:/scripts/consumer.sh:ro
    command: ["/bin/bash", "/scripts/consumer.sh"]
    networks:
      - snaplogicnet
    depends_on:
      - kafka-setup-headless

  # Simulated SnapLogic Ultra Task Instance 4 (Node 2)
  snaplex-instance-4:
    image: bitnami/kafka:3.7
    container_name: snaplex-ultra-instance-4
    hostname: snaplex-instance-4
    environment:
      KAFKA_BROKER: kafka:29092
      CONSUMER_GROUP: snaplogic-group-b
      INSTANCE_ID: instance-4
      NODE_ID: node-2
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    volumes:
      - ./consumer-script-bitnami.sh:/scripts/consumer.sh:ro
    command: ["/bin/bash", "/scripts/consumer.sh"]
    networks:
      - snaplogicnet
    depends_on:
      - kafka-setup-headless

  # Setup service to create topic with 4 partitions
  kafka-setup-headless:
    image: bitnami/kafka:3.7
    container_name: kafka-setup-headless
    volumes:
      - ./setup-headless-bitnami.sh:/scripts/setup.sh:ro
    entrypoint: ["/bin/bash"]
    command: ["/scripts/setup.sh"]
    networks:
      - snaplogicnet
    restart: "no"

  # Producer to generate test messages
  kafka-producer-headless:
    image: bitnami/kafka:3.7
    container_name: kafka-producer-headless
    volumes:
      - ./producer-script-bitnami.sh:/scripts/producer.sh:ro
    entrypoint: ["/bin/bash"]
    command: ["/scripts/producer.sh"]
    networks:
      - snaplogicnet
    profiles: ["producer"]

  # Monitoring UI to see consumer groups (remains the same)
  kafka-ui-headless:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-headless
    environment:
      KAFKA_CLUSTERS_0_NAME: headless-demo
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    ports:
      - "8081:8080"
    networks:
      - snaplogicnet
    profiles: ["monitoring"]

# Use the existing network from main Kafka setup
networks:
  snaplogicnet:
    external: true
    name: docker_snaplogicnet
